// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.1
// source: staff-microservice.proto

package staff_protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for getting a staff member.
type GetStaffMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStaffMemberRequest) Reset() {
	*x = GetStaffMemberRequest{}
	mi := &file_staff_microservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStaffMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaffMemberRequest) ProtoMessage() {}

func (x *GetStaffMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaffMemberRequest.ProtoReflect.Descriptor instead.
func (*GetStaffMemberRequest) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetStaffMemberRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetStaffMemberRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message contains the staff member.
type GetStaffMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffMember *StaffMember `protobuf:"bytes,1,opt,name=staffMember,proto3" json:"staffMember,omitempty"`
}

func (x *GetStaffMemberResponse) Reset() {
	*x = GetStaffMemberResponse{}
	mi := &file_staff_microservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStaffMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaffMemberResponse) ProtoMessage() {}

func (x *GetStaffMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaffMemberResponse.ProtoReflect.Descriptor instead.
func (*GetStaffMemberResponse) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetStaffMemberResponse) GetStaffMember() *StaffMember {
	if x != nil {
		return x.StaffMember
	}
	return nil
}

// Request message for fetching the courses' list for courses a staff member is assigned to.
type GetCoursesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// do we need token here? do we want to allow guests (not students or staff members)
	// to access the courses list fo a specific staff member?
	StaffMember *StaffMember `protobuf:"bytes,1,opt,name=staffMember,proto3" json:"staffMember,omitempty"`
	Semester    string       `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *GetCoursesListRequest) Reset() {
	*x = GetCoursesListRequest{}
	mi := &file_staff_microservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCoursesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoursesListRequest) ProtoMessage() {}

func (x *GetCoursesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoursesListRequest.ProtoReflect.Descriptor instead.
func (*GetCoursesListRequest) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{2}
}

func (x *GetCoursesListRequest) GetStaffMember() *StaffMember {
	if x != nil {
		return x.StaffMember
	}
	return nil
}

func (x *GetCoursesListRequest) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

// Response message with a courses' list for courses a staff member is assigned to.
type GetCoursesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetCoursesListResponse) Reset() {
	*x = GetCoursesListResponse{}
	mi := &file_staff_microservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCoursesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoursesListResponse) ProtoMessage() {}

func (x *GetCoursesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoursesListResponse.ProtoReflect.Descriptor instead.
func (*GetCoursesListResponse) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{3}
}

func (x *GetCoursesListResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

// Request message for creating a new staff member.
type CreateStaffMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffMember *StaffMember `protobuf:"bytes,1,opt,name=staffMember,proto3" json:"staffMember,omitempty"`
}

func (x *CreateStaffMemberRequest) Reset() {
	*x = CreateStaffMemberRequest{}
	mi := &file_staff_microservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStaffMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaffMemberRequest) ProtoMessage() {}

func (x *CreateStaffMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaffMemberRequest.ProtoReflect.Descriptor instead.
func (*CreateStaffMemberRequest) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{4}
}

func (x *CreateStaffMemberRequest) GetStaffMember() *StaffMember {
	if x != nil {
		return x.StaffMember
	}
	return nil
}

// Response message contains the new staff member details.
type CreateStaffMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffMember *StaffMember `protobuf:"bytes,1,opt,name=staffMember,proto3" json:"staffMember,omitempty"`
}

func (x *CreateStaffMemberResponse) Reset() {
	*x = CreateStaffMemberResponse{}
	mi := &file_staff_microservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStaffMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaffMemberResponse) ProtoMessage() {}

func (x *CreateStaffMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaffMemberResponse.ProtoReflect.Descriptor instead.
func (*CreateStaffMemberResponse) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{5}
}

func (x *CreateStaffMemberResponse) GetStaffMember() *StaffMember {
	if x != nil {
		return x.StaffMember
	}
	return nil
}

// Request message for updating a staff member.
type UpdateStaffMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string       `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StaffMember *StaffMember `protobuf:"bytes,2,opt,name=staffMember,proto3" json:"staffMember,omitempty"`
}

func (x *UpdateStaffMemberRequest) Reset() {
	*x = UpdateStaffMemberRequest{}
	mi := &file_staff_microservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStaffMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaffMemberRequest) ProtoMessage() {}

func (x *UpdateStaffMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaffMemberRequest.ProtoReflect.Descriptor instead.
func (*UpdateStaffMemberRequest) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateStaffMemberRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateStaffMemberRequest) GetStaffMember() *StaffMember {
	if x != nil {
		return x.StaffMember
	}
	return nil
}

// Request message with the updated staff member details.
type UpdateStaffMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffMember *StaffMember `protobuf:"bytes,1,opt,name=staffMember,proto3" json:"staffMember,omitempty"`
}

func (x *UpdateStaffMemberResponse) Reset() {
	*x = UpdateStaffMemberResponse{}
	mi := &file_staff_microservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStaffMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaffMemberResponse) ProtoMessage() {}

func (x *UpdateStaffMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaffMemberResponse.ProtoReflect.Descriptor instead.
func (*UpdateStaffMemberResponse) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateStaffMemberResponse) GetStaffMember() *StaffMember {
	if x != nil {
		return x.StaffMember
	}
	return nil
}

// Request message for deleting a staff member.
type DeleteStaffMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string       `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StaffMember *StaffMember `protobuf:"bytes,2,opt,name=staffMember,proto3" json:"staffMember,omitempty"`
}

func (x *DeleteStaffMemberRequest) Reset() {
	*x = DeleteStaffMemberRequest{}
	mi := &file_staff_microservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStaffMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStaffMemberRequest) ProtoMessage() {}

func (x *DeleteStaffMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStaffMemberRequest.ProtoReflect.Descriptor instead.
func (*DeleteStaffMemberRequest) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteStaffMemberRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DeleteStaffMemberRequest) GetStaffMember() *StaffMember {
	if x != nil {
		return x.StaffMember
	}
	return nil
}

// Response message for deleting a staff member - no data returned.
type DeleteStaffMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStaffMemberResponse) Reset() {
	*x = DeleteStaffMemberResponse{}
	mi := &file_staff_microservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStaffMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStaffMemberResponse) ProtoMessage() {}

func (x *DeleteStaffMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStaffMemberResponse.ProtoReflect.Descriptor instead.
func (*DeleteStaffMemberResponse) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{9}
}

// StaffMember message includes:
type StaffMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName  string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	SecondName string `protobuf:"bytes,3,opt,name=secondName,proto3" json:"secondName,omitempty"`
	Email      string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Title      string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Office     string `protobuf:"bytes,6,opt,name=office,proto3" json:"office,omitempty"`
}

func (x *StaffMember) Reset() {
	*x = StaffMember{}
	mi := &file_staff_microservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaffMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffMember) ProtoMessage() {}

func (x *StaffMember) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffMember.ProtoReflect.Descriptor instead.
func (*StaffMember) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{10}
}

func (x *StaffMember) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StaffMember) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *StaffMember) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *StaffMember) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *StaffMember) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StaffMember) GetOffice() string {
	if x != nil {
		return x.Office
	}
	return ""
}

// Course message includes:
type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CourseName string `protobuf:"bytes,2,opt,name=courseName,proto3" json:"courseName,omitempty"`
	Semester   string `protobuf:"bytes,3,opt,name=semester,proto3" json:"semester,omitempty"`
}

func (x *Course) Reset() {
	*x = Course{}
	mi := &file_staff_microservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_staff_microservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_staff_microservice_proto_rawDescGZIP(), []int{11}
}

func (x *Course) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Course) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *Course) GetSemester() string {
	if x != nil {
		return x.Semester
	}
	return ""
}

var File_staff_microservice_proto protoreflect.FileDescriptor

var file_staff_microservice_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x22, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x69, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0x50,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x51, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x66,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x32, 0xb4, 0x03, 0x0a, 0x0c,
	0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c,
	0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1f, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1f, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x47, 0x52, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2d,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_staff_microservice_proto_rawDescOnce sync.Once
	file_staff_microservice_proto_rawDescData = file_staff_microservice_proto_rawDesc
)

func file_staff_microservice_proto_rawDescGZIP() []byte {
	file_staff_microservice_proto_rawDescOnce.Do(func() {
		file_staff_microservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_staff_microservice_proto_rawDescData)
	})
	return file_staff_microservice_proto_rawDescData
}

var file_staff_microservice_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_staff_microservice_proto_goTypes = []any{
	(*GetStaffMemberRequest)(nil),     // 0: staff.GetStaffMemberRequest
	(*GetStaffMemberResponse)(nil),    // 1: staff.GetStaffMemberResponse
	(*GetCoursesListRequest)(nil),     // 2: staff.GetCoursesListRequest
	(*GetCoursesListResponse)(nil),    // 3: staff.GetCoursesListResponse
	(*CreateStaffMemberRequest)(nil),  // 4: staff.CreateStaffMemberRequest
	(*CreateStaffMemberResponse)(nil), // 5: staff.CreateStaffMemberResponse
	(*UpdateStaffMemberRequest)(nil),  // 6: staff.UpdateStaffMemberRequest
	(*UpdateStaffMemberResponse)(nil), // 7: staff.UpdateStaffMemberResponse
	(*DeleteStaffMemberRequest)(nil),  // 8: staff.DeleteStaffMemberRequest
	(*DeleteStaffMemberResponse)(nil), // 9: staff.DeleteStaffMemberResponse
	(*StaffMember)(nil),               // 10: staff.StaffMember
	(*Course)(nil),                    // 11: staff.Course
}
var file_staff_microservice_proto_depIdxs = []int32{
	10, // 0: staff.GetStaffMemberResponse.staffMember:type_name -> staff.StaffMember
	10, // 1: staff.GetCoursesListRequest.staffMember:type_name -> staff.StaffMember
	11, // 2: staff.GetCoursesListResponse.courses:type_name -> staff.Course
	10, // 3: staff.CreateStaffMemberRequest.staffMember:type_name -> staff.StaffMember
	10, // 4: staff.CreateStaffMemberResponse.staffMember:type_name -> staff.StaffMember
	10, // 5: staff.UpdateStaffMemberRequest.staffMember:type_name -> staff.StaffMember
	10, // 6: staff.UpdateStaffMemberResponse.staffMember:type_name -> staff.StaffMember
	10, // 7: staff.DeleteStaffMemberRequest.staffMember:type_name -> staff.StaffMember
	0,  // 8: staff.StaffService.GetStaffMember:input_type -> staff.GetStaffMemberRequest
	2,  // 9: staff.StaffService.GetCoursesList:input_type -> staff.GetCoursesListRequest
	4,  // 10: staff.StaffService.CreateStaffMember:input_type -> staff.CreateStaffMemberRequest
	6,  // 11: staff.StaffService.UpdateStaffMember:input_type -> staff.UpdateStaffMemberRequest
	8,  // 12: staff.StaffService.DeleteStaffMember:input_type -> staff.DeleteStaffMemberRequest
	1,  // 13: staff.StaffService.GetStaffMember:output_type -> staff.GetStaffMemberResponse
	3,  // 14: staff.StaffService.GetCoursesList:output_type -> staff.GetCoursesListResponse
	5,  // 15: staff.StaffService.CreateStaffMember:output_type -> staff.CreateStaffMemberResponse
	7,  // 16: staff.StaffService.UpdateStaffMember:output_type -> staff.UpdateStaffMemberResponse
	9,  // 17: staff.StaffService.DeleteStaffMember:output_type -> staff.DeleteStaffMemberResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_staff_microservice_proto_init() }
func file_staff_microservice_proto_init() {
	if File_staff_microservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_staff_microservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_staff_microservice_proto_goTypes,
		DependencyIndexes: file_staff_microservice_proto_depIdxs,
		MessageInfos:      file_staff_microservice_proto_msgTypes,
	}.Build()
	File_staff_microservice_proto = out.File
	file_staff_microservice_proto_rawDesc = nil
	file_staff_microservice_proto_goTypes = nil
	file_staff_microservice_proto_depIdxs = nil
}
